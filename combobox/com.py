# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'com.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
class Combobox(QtWidgets.QComboBox):
    OK=True
    class Listview(QtWidgets.QListView):
        def __init__(self,parent=None):
            super().__init__(parent)
        def mousePressEvent(self, e):
            Combobox.OK=False
            super().mousePressEvent(e)
    def __init__(self,parent,show_choice=False):
        super().__init__(parent)
        self.show_text = None
        self.get_item=[]
        self.get_texts=[]
        self.qe=QtWidgets.QLineEdit(self)
        self.setLineEdit(self.qe)
        self.show_choice=show_choice
        self.setView(self.Listview(self))
        self.activated.connect(self.change_ok)
        self.view().pressed.connect(self.get_data)
    def change_ok(self):
        self.OK=True
        if self.show_choice:
            if self.ok:
                self.show_text=','.join(self.get_texts)
                self.qe.setText(self.show_text)



    def hidePopup(self):
        if self.OK:
            w=len(self.get_texts)*35
            if w==35:
                w=50
            self.resize(w,self.rect().height())
            super().hidePopup()
    def showPopup(self) -> None:
        super().showPopup()
        model=self.model()
        count=self.count()
        for i in range(count):
            index=model.index(i,0)
            standard_item: QStandardItem = model.itemFromIndex(index)
            cheched_state = standard_item.checkState()
            if cheched_state==2:
                standard_item.setCheckState(0)
        self.get_item.clear()
    def get_data(self,index):
        self.OK=False
        standard_model=self.model()
        standard_item=standard_model.itemFromIndex(index)
        cheched_state=standard_item.checkState()
        if not cheched_state:
            a=int(not cheched_state)+1
            standard_item.setCheckState(a)
            self.get_item.append(index.row())
        else:
            standard_item.setCheckState(not cheched_state)
            self.get_item.remove(index.row())
    @property
    def ok(self):
        if self.get_item:
            self.get_item.sort()
            self.get_texts.clear()
            for i in self.get_item:
                self.get_texts.append(self.itemText(i))
            return self.get_texts
class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(779, 506)
        self.ok = QtWidgets.QPushButton(Form)
        self.ok.setGeometry(QtCore.QRect(180, 290, 93, 28))
        self.ok.setObjectName("ok")
        self.word_type = QtWidgets.QComboBox(Form)
        self.word_type.setGeometry(QtCore.QRect(230, 70, 261, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.word_type.setFont(font)
        self.word_type.setObjectName("word_type")
        self.word_type.addItem("")
        self.word_type.addItem("")
        self.word_type.addItem("")
        self.word = QtWidgets.QLineEdit(Form)
        self.word.setGeometry(QtCore.QRect(52, 70, 131, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.word.setFont(font)
        self.word.setObjectName("word")
        self.identity = Combobox(Form)
        self.identity.setGeometry(QtCore.QRect(520, 70, 231, 22))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.identity.setFont(font)
        self.identity.setObjectName("identity")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.identity.addItem("")
        self.loser = QtWidgets.QPushButton(Form)
        self.loser.setGeometry(QtCore.QRect(350, 290, 93, 28))
        self.loser.setObjectName("loser")

        self.retranslateUi(Form)
        self.loser.clicked.connect(Form.close) # type: ignore
        self.ok.clicked.connect(Form.ok_clicked) # type: ignore
        self.word_type.currentIndexChanged['int'].connect(Form.type_change) # type: ignore
        self.identity.currentIndexChanged['int'].connect(Form.id_change) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.ok.setText(_translate("Form", "确定"))
        self.word_type.setItemText(0, _translate("Form", "int"))
        self.word_type.setItemText(1, _translate("Form", "varchar()"))
        self.word_type.setItemText(2, _translate("Form", "datetime"))
        self.identity.setItemText(0, _translate("Form", "PK"))
        self.identity.setItemText(1, _translate("Form", "UN"))
        self.identity.setItemText(2, _translate("Form", "NN"))
        self.identity.setItemText(3, _translate("Form", "BIN"))
        self.identity.setItemText(4, _translate("Form", "AL"))
        self.identity.setItemText(5, _translate("Form", "G"))
        self.identity.setItemText(6, _translate("Form", "ZF"))
        self.identity.setItemText(7, _translate("Form", "UQ"))
        self.loser.setText(_translate("Form", "退出"))
